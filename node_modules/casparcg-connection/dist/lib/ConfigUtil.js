"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Options NS
const AMCPConnectionOptions_1 = require("./AMCPConnectionOptions");
var CasparCGVersion = AMCPConnectionOptions_1.Options.CasparCGVersion;
// AMCPUtilNS
const AMCP_1 = require("./AMCP");
var CasparCGSocketResponse = AMCP_1.AMCPUtil.CasparCGSocketResponse;
// Validation NS
const ResponseValidators_1 = require("./ResponseValidators");
var XMLValidator = ResponseValidators_1.Response.XMLValidator;
// Response NS
const ResponseParsers_1 = require("./ResponseParsers");
var ConfigParser = ResponseParsers_1.Response.ConfigParser;
/***/
var ConfigUtil;
(function (ConfigUtil) {
    /***/
    function parseConfigFrom207XML(XMLString) {
        let validator = new XMLValidator();
        let parser = new ConfigParser();
        parser.context = { serverVersion: CasparCGVersion.V207 };
        let fauxResponseData = new CasparCGSocketResponse(XMLString); // @todo: does this work?
        let validData = validator.resolve(fauxResponseData);
        if (validData === false) {
            return {};
        }
        validData = parser.parse(validData);
        if (validData === false) {
            return {};
        }
        return validData;
    }
    ConfigUtil.parseConfigFrom207XML = parseConfigFrom207XML;
    /***/
    function parseConfigFrom210XML(XMLString) {
        let validator = new XMLValidator();
        let parser = new ConfigParser();
        parser.context = { serverVersion: CasparCGVersion.V210 };
        let fauxResponseData = new CasparCGSocketResponse(XMLString); // @todo: does this work?
        let validData = {};
        validData = validator.resolve(fauxResponseData);
        if (validData === false) {
            return {};
        }
        validData = parser.parse(validData);
        if (validData === false) {
            return {};
        }
        return validData;
    }
    ConfigUtil.parseConfigFrom210XML = parseConfigFrom210XML;
})(ConfigUtil = exports.ConfigUtil || (exports.ConfigUtil = {}));
//# sourceMappingURL=ConfigUtil.js.map